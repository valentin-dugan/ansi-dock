#!/bin/bash


#################
### ANSI-DOCK ###
#################

# Source: https://github.com/valentin-dugan/ansi-dock

# This script allows you to run Ansible tasks and playbooks in a Docker container, ensuring a consistent environment.
# Running script will build a Docker image, start a container, and provide an interactive shell session with access to your SSH agent and configuration.
# Docker must be installed on your system.


# LIB #######################################################


COLOR_RED="\033[1;31m"
COLOR_GREEN="\033[1;32m"
COLOR_YELLOW="\033[1;33m"
COLOR_END="\033[0m"


error () {

  echo -e "${COLOR_RED}ERROR:${COLOR_END} $1" > /dev/tty
  [[ "$2" == "print_help"  ]] && print_help
  exit 1

}


# Detect OS
case $( uname -s ) in

 Linux*)    OS=linux ;;
 Darwin*)   OS=macos ;;
 *)         error "Unknown OS." ;;

esac


# END LIB ###################################################


if [[ $OS == linux ]]
then

  # Use sudo if run as non-root
  [[ $( id -u ) == 0 ]] || SUDO='sudo -p "Please enter your sudo password: "'

fi


print_help () {
cat << EOF

USAGE:

  $0                # Start ANSI-DOCK container

  $0 --build        # Re-build ANSI-DOCK image 

EOF
}


is_docker_ready () {

    command -v docker &>/dev/null || error "Please install docker"
    docker ps &>/dev/null || error "Docker is not running"

}


dockerfile () {
cat << EOF
FROM ubuntu

# Install dependencies
RUN export DEBIAN_FRONTEND=noninteractive && \
    apt update && \
    apt install -y \
                ansible \
                python3-proxmoxer \
                python3-pip \
                python3-venv \
                &&\
    ansible-galaxy collection install community.general 

# Change prompt
RUN echo 'PS1="${COLOR_YELLOW}ANSI-DOCK ${COLOR_GREEN}>> ${COLOR_END}"' >> /root/.bashrc

# Start in /ansible directory
RUN echo 'cd /ansible' >> /root/.bashrc
EOF
}


docker_build () {

    docker build -t ansi-dock - <<< "$(dockerfile)"

}


docker_run () {

    $SUDO docker run -it --rm --name ansi-dock \
            -v .:/ansible \
            -v ${HOME}/.ssh:/root/.ssh \
            -v /run/host-services/ssh-auth.sock:/run/host-services/ssh-auth.sock \
            -e SSH_AUTH_SOCK="/run/host-services/ssh-auth.sock" \
            ansi-dock /bin/bash

}


case $1 in

    "" )
        docker images  | grep -q ansi-dock || docker_build
        is_docker_ready
        docker_run
        ;;

    --build )
        is_docker_ready
        docker_build
        ;;

    -h | --help )
        print_help
        ;;

    * )
        error "Unknown option $1" "print_help"
        ;;

esac 

